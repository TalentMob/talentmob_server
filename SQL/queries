SELECT videos.id,
videos.user_id,
videos.categories,
videos.downvotes,
videos.upvotes,
videos.shares,
videos.views,
videos.comments,
videos.thumbnail,
videos.key,
videos.title,
videos.created_at,
videos.updated_at,
videos.is_active,

FROM videos
LEFT JOIN boosts
ON boosts.video_id = videos.id

WHERE videos.id NOT IN (select video_id from votes where user_id = 1)
AND videos.user_id != 1
AND videos.is_active = true
ORDER BY videos.created_at DESC, boosts.end_time DESC
LIMIT 10
OFFSET 0 
;

    EXPLAIN ANALYZE SELECT  *
    FROM (

    (SELECT
             1 as priority,
             videos.id,
             videos.user_id,
             videos.categories,
             videos.downvotes,
             videos.upvotes,
             videos.shares,
             videos.views,
             videos.comments,
             videos.thumbnail,
             videos.key,
             videos.title,
             videos.created_at,
             videos.updated_at,
             videos.is_active,
             videos.upvote_trending_count
    FROM videos
    WHERE videos.id NOT IN (select video_id from votes where user_id = 1180)
    AND videos.user_id != 1180
    AND videos.is_active = true
    AND videos.upvote_trending_count > 1
    and videos.created_at > now() AT TIME ZONE 'America/Los_Angeles' - interval '1 week'
    ORDER BY upvote_trending_count DESC
    LIMIT 4
    ) UNION ALL (
    SELECT
            2 as priority,
            videos.id,
            videos.user_id,
            videos.categories,
            videos.downvotes,
            videos.upvotes,
            videos.shares,
            videos.views,
            videos.comments,
            videos.thumbnail,
            videos.key,
            videos.title,
            videos.created_at,
            videos.updated_at,
            videos.is_active,
            videos.upvote_trending_count
            FROM boosts
            INNER JOIN videos
            ON videos.id = boosts.video_id
            AND videos.user_id != 6
            AND videos.is_active = true
            WHERE boosts.is_active = true
            AND boosts.end_time >= now()
            AND boosts.video_id NOT IN (SELECT video_id from votes where user_id = 1180)
            ORDER BY random()
            LIMIT 3
        ) UNION ALL (

            SELECT * FROM (
            SELECT DISTINCT ON (videos.user_id)
            3 as priority,
            videos.id,
            videos.user_id,
            videos.categories,
            videos.downvotes,
            videos.upvotes,
            videos.shares,
            videos.views,
            videos.comments,
            videos.thumbnail,
            videos.key,
            videos.title,
            videos.created_at,
            videos.updated_at,
            videos.is_active,
            videos.upvote_trending_count
            FROM videos
            WHERE videos.id NOT IN (select video_id from votes where user_id = 1180)
            AND videos.user_id != 1180
            AND videos.is_active = true
            AND videos.upvote_trending_count <= 1
            OR videos.id NOT IN (select video_id from votes where user_id = 1180)
            AND videos.user_id != 1180
            AND videos.is_active = true
            AND videos.upvote_trending_count IS NULL
            ORDER BY videos.user_id DESC, videos.created_at DESC
            LIMIT 100
            OFFSET 0

         ) v
         ORDER BY v.created_at DESC, v.upvote_trending_count DESC
    )
    ) as feed
    ORDER BY priority ASC
    LIMIT 10
    OFFSET 0;

//Talent Ranking Query

    SELECT s.*
    FROM (
        SELECT u.*,
        ROW_NUMBER() OVER(ORDER BY u.votes DESC) as rank
        FROM (
            SELECT
                id,
                name,
                (SELECT
                    COUNT(*)
                  FROM votes
                  INNER JOIN videos
                  ON videos.id = votes.video_id
                  AND videos.user_id = users.id
                  WHERE upvote > 0)
                  as votes
            FROM  users
            WHERE users.id != 8
            AND users.id != 11) u
            ) s

   WHERE s.id = 20

//Mob Ranking Query
     SELECT s.*
       FROM (
           SELECT u.*,
           ROW_NUMBER() OVER(ORDER BY u.total_mob DESC) as rank
           FROM (
               SELECT
                   users.id,
                   users.name,
                   points.total_mob
               FROM  users
               INNER JOIN points
               ON points.user_id = users.id
               WHERE points.total_mob > 0) u
               ) s

      WHERE s.id = 6

// Talent count

            SELECT
                 count(*)
            FROM  users
            WHERE users.id != 8
            AND users.id != 11
			AND users.is_active = true
			AND users.account_type = 1




    SELECT s.*
      FROM (SELECT t.*,
                   ROW_NUMBER() OVER(ORDER BY t.published_date) AS position
              FROM TABLE t) s
     WHERE s.id = 65

            SELECT
                        videos.id,
						videos.user_id,
						videos.categories,
						competitors.down_votes,
						competitors.up_votes,
						videos.shares,
						videos.views,
						videos.comments,
						videos.thumbnail,
						videos.key,
						videos.title,
						videos.created_at,
						videos.updated_at,
						videos.is_active
			FROM videos
			INNER JOIN competitors
			ON competitors.video_id = videos.id
			WHERE
				videos.is_active = true
			AND competitors.is_active = true
			AND competitors.event_id = 1

			ORDER BY competitors.event_id, competitors.up_votes DESC, competitors.down_votes ASC
			LIMIT 10
			OFFSET 0;

America/Los_Angeles



SELECT
             1 as priority,
             videos.id,
             videos.user_id,
             videos.categories,
             videos.downvotes,
             videos.upvotes,
             videos.title,
             videos.created_at,
             videos.updated_at,
             videos.is_active,
             videos.upvote_trending_count
    FROM videos
    WHERE videos.id NOT IN (select video_id from votes where user_id = 10)
    AND videos.user_id != 10
    AND videos.is_active = true
    AND videos.upvote_trending_count > 1
    and videos.created_at > now() AT TIME ZONE 'America/Los_Angeles' - interval '1 week'
    ORDER BY upvote_trending_count DESC
    LIMIT 4

UPDATE events SET start_date = ('2018-04-16' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 25;
UPDATE events SET start_date = ('2018-04-23' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 26;
UPDATE events SET start_date = ('2018-04-30' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 27;
UPDATE events SET start_date = ('2018-05-7' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 28;
UPDATE events SET start_date = ('2018-05-14' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 29;
UPDATE events SET start_date = ('2018-05-21' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 30;
UPDATE events SET start_date = ('2018-05-28' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 31;


** TESTING
SELECT  *
    FROM (

    (SELECT
             1 as priority,
             videos.id,
             videos.user_id,
             videos.downvotes,
             videos.upvotes,
             videos.views,
             videos.title,
             videos.created_at,
             videos.is_active,
             videos.upvote_trending_count
    FROM videos
    WHERE videos.id NOT IN (select video_id from votes where user_id = 6)
    AND videos.user_id != 6
    AND videos.is_active = true
    AND videos.upvote_trending_count > 1
    and videos.created_at > now() AT TIME ZONE 'America/Los_Angeles' - interval '1 week'
    ORDER BY upvote_trending_count DESC
    LIMIT 4
    ) UNION ALL (
    SELECT
           2 as priority,
                        videos.id,
                        videos.user_id,
                        videos.downvotes,
                        videos.upvotes,
                        videos.views,
                        videos.title,
                        videos.created_at,
                        videos.is_active,
                        videos.upvote_trending_count
            FROM boosts
            INNER JOIN videos
            ON videos.id = boosts.video_id
            AND videos.user_id != 6
            AND videos.is_active = true
            WHERE boosts.is_active = true
            AND boosts.end_time >= now()
            AND boosts.video_id NOT IN (SELECT video_id from votes where user_id = 1)
            ORDER BY random()
            LIMIT 3
        ) UNION ALL (


        SELECT * FROM (

            (SELECT DISTINCT ON (videos.user_id)
          3 as priority,
                       videos.id,
                       videos.user_id,
                       videos.downvotes,
                       videos.upvotes,
                       videos.views,
                       videos.title,
                       videos.created_at,
                       videos.is_active,
                       videos.upvote_trending_count
            FROM videos
            WHERE videos.id NOT IN (select video_id from votes where user_id = 6)
            AND videos.user_id != 6
            AND videos.is_active = true
            AND videos.upvote_trending_count <= 1
            OR videos.id NOT IN (select video_id from votes where user_id = 6)
            AND videos.user_id != 6
            AND videos.is_active = true
            AND videos.upvote_trending_count IS NULL
            ORDER BY videos.user_id ASC


         ) v

         ORDER BY v.created_at DESC, v.upvote_trending_count DESC
    )
    ) as feed
    ORDER BY priority ASC
    LIMIT 30
    OFFSET 0;



    SELECT  *
        FROM (

        (SELECT
                 1 as priority,
               videos.id,
                           videos.user_id,
                           videos.downvotes,
                           videos.upvotes,
                           videos.views,
                           videos.title,
                           videos.created_at,
                           videos.is_active,
                           videos.upvote_trending_count
        FROM videos
        WHERE videos.id NOT IN (select video_id from votes where user_id = 6)
        AND videos.user_id != 6
        AND videos.is_active = true
        AND videos.upvote_trending_count > 1
        and videos.created_at > now() AT TIME ZONE 'America/Los_Angeles' - interval '1 week'
        ORDER BY upvote_trending_count DESC
        LIMIT 4
        ) UNION ALL (
        SELECT
                2 as priority,
             videos.id,
                         videos.user_id,
                         videos.downvotes,
                         videos.upvotes,
                         videos.views,
                         videos.title,
                         videos.created_at,
                         videos.is_active,
                         videos.upvote_trending_count

                FROM boosts
                INNER JOIN videos
                ON videos.id = boosts.video_id
                AND videos.user_id !=  6
                AND videos.is_active = true
                WHERE boosts.is_active = true
                AND boosts.end_time >= now()
                AND boosts.video_id NOT IN (SELECT video_id from votes where user_id =  6)
                ORDER BY random()
                LIMIT 3
            ) UNION ALL (

                WITH recent_videos as (

                SELECT
                3 as priority,
                                          videos.id,
                                          videos.user_id,
                                          videos.downvotes,
                                          videos.upvotes,
                                          videos.views,
                                          videos.title,
                                          videos.created_at,
                                          videos.is_active,
                                          videos.upvote_trending_count,
                                          dense_rank()
                                                  over(partition by user_id order by created_at desc) as the_ranking
                               FROM videos
                               WHERE videos.id NOT IN (select video_id from votes where user_id =  6)
                               AND videos.user_id !=  6
                               AND videos.is_active = true
                               AND videos.upvote_trending_count <= 1
                               OR videos.id NOT IN (select video_id from votes where user_id =  6)
                               AND videos.user_id !=  6
                               AND videos.is_active = true
                               AND videos.upvote_trending_count IS NULL
                               ORDER BY   videos.id DESC
                               LIMIT 20
                )

                select
                  3 as priority,
                videos.id,
                                                                 videos.user_id,
                                                                 videos.downvotes,
                                                                 videos.upvotes,
                                                                 videos.views,
                                                                 videos.title,
                                                                 videos.created_at,
                                                                 videos.is_active,
                                                                 videos.upvote_trending_count
                from recent_videos videos
                where the_ranking = 1
                order by created_at DESC, upvote_trending_count DESC

        )

        ) as feed
        ORDER BY priority ASC
        LIMIT 10
        OFFSET 0;
