SELECT videos.id,
videos.user_id,
videos.categories,
videos.downvotes,
videos.upvotes,
videos.shares,
videos.views,
videos.comments,
videos.thumbnail,
videos.key,
videos.title,
videos.created_at,
videos.updated_at,
videos.is_active,

FROM videos
LEFT JOIN boosts
ON boosts.video_id = videos.id

WHERE videos.id NOT IN (select video_id from votes where user_id = 1)
AND videos.user_id != 1
AND videos.is_active = true
ORDER BY videos.created_at DESC, boosts.end_time DESC
LIMIT 10
OFFSET 0 
;

    SELECT *
    FROM (

    (SELECT
             1 as priority,
             videos.id,
             videos.user_id,
             videos.categories,
             videos.downvotes,
             videos.upvotes,
             videos.shares,
             videos.views,
             videos.comments,
             videos.thumbnail,
             videos.key,
             videos.title,
             videos.created_at,
             videos.updated_at,
             videos.is_active,
             videos.upvote_trending_count
    FROM videos
    WHERE videos.id NOT IN (select video_id from votes where user_id = 10)
    AND videos.user_id != 10
    AND videos.is_active = true
    AND videos.upvote_trending_count > 1
    and videos.created_at > TIMESTAMP '2018-04-17 02:09:30'
    ORDER BY upvote_trending_count DESC

    ) UNION ALL (
    SELECT
            2 as priority,
            videos.id,
            videos.user_id,
            videos.categories,
            videos.downvotes,
            videos.upvotes,
            videos.shares,
            videos.views,
            videos.comments,
            videos.thumbnail,
            videos.key,
            videos.title,
            videos.created_at,
            videos.updated_at,
            videos.is_active,
            videos.upvote_trending_count
            FROM boosts
            INNER JOIN videos
            ON videos.id = boosts.video_id
            AND videos.user_id != 6
            AND videos.is_active = true
            WHERE boosts.is_active = true
            AND boosts.end_time >= now()
            AND boosts.video_id NOT IN (SELECT video_id from votes where user_id = 6)
            ORDER BY end_time DESC

        ) UNION ALL (
    SELECT
            3 as priority,
            videos.id,
            videos.user_id,
            videos.categories,
            videos.downvotes,
            videos.upvotes,
            videos.shares,
            videos.views,
            videos.comments,
            videos.thumbnail,
            videos.key,
            videos.title,
            videos.created_at,
            videos.updated_at,
            videos.is_active,
            videos.upvote_trending_count
         FROM videos
         WHERE videos.id NOT IN (select video_id from votes where user_id = 10)
         AND videos.user_id != 6
         AND videos.is_active = true
         AND videos.upvote_trending_count <= 1
         OR videos.id NOT IN (select video_id from votes where user_id = 10)
         AND videos.user_id != 10
         AND videos.is_active = true
         AND videos.upvote_trending_count IS NULL
         ORDER BY date_trunc('week', created_at) DESC , upvote_trending_count DESC, upvotes DESC, downvotes ASC
         LIMIT 100
         OFFSET 0
        )
    ) as feed
    LIMIT 10
    OFFSET 0;

//Talent Ranking Query

    SELECT s.*
    FROM (
        SELECT u.*,
        ROW_NUMBER() OVER(ORDER BY u.votes DESC) as rank
        FROM (
            SELECT
                id,
                name,
                (SELECT
                    COUNT(*)
                  FROM votes
                  INNER JOIN videos
                  ON videos.id = votes.video_id
                  AND videos.user_id = users.id
                  WHERE upvote > 0)
                  as votes
            FROM  users
            WHERE users.id != 8
            AND users.id != 11) u
            ) s

   WHERE s.id = 20

//Mob Ranking Query
     SELECT s.*
       FROM (
           SELECT u.*,
           ROW_NUMBER() OVER(ORDER BY u.total_mob DESC) as rank
           FROM (
               SELECT
                   users.id,
                   users.name,
                   points.total_mob
               FROM  users
               INNER JOIN points
               ON points.user_id = users.id
               WHERE points.total_mob > 0) u
               ) s

      WHERE s.id = 6

// Talent count


            SELECT
                 count(*)
            FROM  users
            WHERE users.id != 8
            AND users.id != 11
			AND users.is_active = true
			AND users.account_type = 1




    SELECT s.*
      FROM (SELECT t.*,
                   ROW_NUMBER() OVER(ORDER BY t.published_date) AS position
              FROM TABLE t) s
     WHERE s.id = 65



            SELECT
                        videos.id,
						videos.user_id,
						videos.categories,
						competitors.down_votes,
						competitors.up_votes,
						videos.shares,
						videos.views,
						videos.comments,
						videos.thumbnail,
						videos.key,
						videos.title,
						videos.created_at,
						videos.updated_at,
						videos.is_active
			FROM videos
			INNER JOIN competitors
			ON competitors.video_id = videos.id
			WHERE
				videos.is_active = true
			AND competitors.is_active = true
			AND competitors.event_id = 1

			ORDER BY competitors.event_id, competitors.up_votes DESC, competitors.down_votes ASC
			LIMIT 10
			OFFSET 0;

America/Los_Angeles

UPDATE events SET start_date = ('2018-04-16' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 25;
UPDATE events SET start_date = ('2018-04-23' AT TIME ZONE 'UTC') AT TIME ZONE 'America/Los_Angeles' where id = 26;
